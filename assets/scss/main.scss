// We use config.scss to translate site parameters to scss variables
{{ with resources.Get "scss/config.scss" | resources.ExecuteAsTemplate "" . }}
    {{ .Content }}
{{ end }}

// Utilities

@import "utils/mixins";


// Base

@import "base/base";


// Chinese Punctuation Glyph Correction

{{ if .Site.Params.enableChinesePunctuationGlyphCorrection }}
    @import "base/glyph-correction";

    // Magic adjustment for zh-cn
    .drop-cap {
        margin-top: 1rem !important;
    }
{{ end }}

// Emphasis Point

{{ if .Site.Params.enableEmphasisPoint }}
    @import "base/emphasis-point";
{{ end }}

// Paragraph Indents

{{ if .Site.Params.enableParagraphIndent }}
    @import "base/indent";
{{ end }}


// Themes

// Light

@import "themes/light";

// Dark Mode

{{ if .Site.Params.enableDarkMode }}
    @import "themes/dark";
    @import "components/theme-switcher";
{{ end }}


@import 'layout/header';

{{ if .Site.Params.enableNavToggle }}
    @import 'components/nav-toggle';
{{ end }}

// Menu Bar

@import 'layout/menu';



@import "layout/list";


// Single Page

@import "layout/single";


// Footer

@import "layout/footer";


// Components

{{ if and .Site.IsMultiLingual .Site.Params.enableLangToggle }}
    @import "components/multilingual";
{{ end }}

{{ if or .Site.Params.enablePostMeta .Site.Params.enablePostMetaInHome }}
    @import "components/post-meta";
{{ end }}

{{ if .Site.Params.enablePostCopyright }}
    @import "components/post-copyright";
{{ end }}

{{ if .Site.Params.enablePostUpdatedBadge }}
    @import "components/updated-badge";
{{ end }}

{{ if .Site.Params.enablePostGitInfo }}
    @import "components/post-gitinfo";
{{ end }}

{{ if .Site.Params.enablePostShare }}
    {{ if and .Site.Params.displayShareOnText }}
        $displayShareOnText: true;
    {{ else }}
        $displayShareOnText: false;
    {{ end }}

    {{ if and .Site.Params.shareViaQRCode }}
        $shareViaQRCode: true;
    {{ else }}
        $shareViaQRCode: false;
    {{ end }}

    @import "components/post-share";
{{ end }}

{{ if .Site.Params.enableRelatedPosts }}
    @import "components/related-posts";
{{ end }}

{{ if .Site.Params.enablePostTags }}
    @import "components/post-tags";
{{ end }}

{{ if .Site.Params.enableMinimalFooter }}
    @import "components/minimal-footer";
{{ end }}

{{ if .Site.Params.enableAboutPageMinimalFooter }}
    @import "components/minimal-footer-about";
{{ end }}

{{ if .Site.Params.enablePostNav }}
    @import "components/post-nav";
{{ end }}

{{ if .Site.Params.enableComments }}
    @import "components/comments";
{{ end }}

{{ if .Site.Params.enableBackToTop }}
    {{ if .Site.Params.enableBackToTopAutoHide }}
        $enableBackToTopAutoHide: true;
    {{ else }}
        $enableBackToTopAutoHide: false;
    {{ end }}

    @import "components/back-to-top";
{{ end }}

{{ if .Site.Params.enableHighlight }}
    @import "components/highlight";
{{ end }}

{{ if .Site.Params.enableSocials }}
    @import "components/socials";
{{ end }}


// Homepage Layout

{{ if eq .Site.Params.homeLayout "poetry" }}
    $homeLinksPadding: {{ .Site.Params.homeLinksPadding }}em;

    @import "pages/home-poetry";
{{ end }}

{{ if eq .Site.Params.homeLayout "footage" }}
    // https://github.com/reuixiy/hugo-theme-meme/issues/51
    {{ if strings.HasPrefix .Site.Params.homePoster "." }}
        {{ $homePoster := printf `.%s` .Site.Params.homePoster }}
        {{ .Scratch.Set "homePoster" $homePoster }}
    {{ else }}
        {{ .Scratch.Set "homePoster" .Site.Params.homePoster }}
    {{ end }}
    {{ $homePoster := .Scratch.Get "homePoster" }}

    $homePoster: url({{ $homePoster }});

    @import "pages/home-footage";
{{ end }}

{{ if eq .Site.Params.homeLayout "posts" }}
    @import "pages/home-posts";
{{ end }}


// Categories Page

{{ if .Site.Params.enableTree }}
    @import "pages/tree-categories";
{{ end }}


// Tags Page

{{ if .Site.Params.enableTagCloud }}
    @import "pages/tag-cloud";
{{ end }}


// 404 Page

// https://github.com/reuixiy/hugo-theme-meme/issues/51
{{ if strings.HasPrefix .Site.Params.fofPoster "." }}
    {{ $fofPoster := printf `.%s` .Site.Params.fofPoster }}
    {{ .Scratch.Set "fofPoster" $fofPoster }}
{{ else }}
    {{ .Scratch.Set "fofPoster" .Site.Params.fofPoster }}
{{ end }}
{{ $fofPoster := .Scratch.Get "fofPoster" }}

$fofPoster: url({{ $fofPoster }});

@import "pages/404";


// Third Party

// Medium Zoom

{{ if .Site.Params.enableMediumZoom }}
    @import "third-party/medium-zoom";
{{ end }}

// Busuanzi Site UV And PV

{{ if and .Site.Params.displayBusuanziSiteUVAndPV (eq hugo.Environment "production") }}
    @import "third-party/busuanzi";
{{ end }}

// Lunr search

{{ if or .Site.Params.enableLunrSearch .Site.Params.enableAlgoliaSearch }}
    $enableSearch: true;
    @import "components/search";
{{ else }}
    $enableSearch: false;
{{ end }}

// Responsive

@import "base/max-width";
:root {
    --max-width: #{$maxWidth};
}
@import "base/responsive";

// Data Attributes

@import "base/data-attributes";

// @supports()

@import "base/supports";

// Custom

@import "custom/custom";
